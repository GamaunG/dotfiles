#vim: filetype=zsh
# Sourced by lfrc
cmd stripvideolayer ${{
   clear;
   set -f;

   #Variables for notify-send
   converted_filenames="";
   converted_files_count=0;
   videos_without_audio_streams="";
   videos_without_audio_streams_count=0;

   for pickedFilepath in $fx; do
      case $pickedFilepath in
	*.mp4 | *.webm | *.mkv)
	  ;;
	*)
	   echo 'Skipping ${pickedFilepath}' && continue 1;;
      esac

      parsed_MP3=$(echo "$pickedFilepath" | sed 's/\(.mp4\|.webm\|.mkv\)/.mp3/' | sed 's|.*\/||');
      parsed_MP3="~/Music/${parsed_MP3}";

      #Using ffprobe because videos without audiostream result in exit code 1 which stops this entire loop of many files
      #Remove (alongside its 2 variables) if you don't record videos without audio (which are admittedly rare)
      if [[ $(ffprobe -loglevel error -show_entries stream=codec_type -of csv=p=0 "$pickedFilepath") != *"audio"* ]]; then
	  ((videos_without_audio_streams_count=videos_without_audio_streams_count+1));
	  videos_without_audio_streams="$videos_without_audio_streams"$'\n'"$pickedFilepath";
	  continue 1;
      fi

      ffmpeg -i "$pickedFilepath" "$parsed_MP3";

      ((converted_files_count=converted_files_count+1));
      converted_filenames="$converted_filenames"$'\n'"$pickedFilepath";

      if [[ $# -eq 1 ]]; then
	rm -f -- $pickedFilepath;
      fi
   done

   #Notify the results to the user
   if [[ $converted_files_count -gt 0 ]]; then
      converted_filenames=$(echo "$converted_filenames" | sed 's|.*\/||');
      notify-send "Converted MP3 Files($converted_files_count):" "$converted_filenames";
   fi;

   if [[ $videos_without_audio_streams_count -gt 0 ]]; then
      videos_without_audio_streams=$(echo "$videos_without_audio_streams" | sed 's|.*\/||');
      notify-send "Videos without audio stream($videos_without_audio_streams_count):" "$videos_without_audio_streams";
   fi;

   #Uncomment the below line if you want to automatically unselect the original converted video files
   #lf -remote "send $id unselect";
}}

cmd compressvideo ${{
   clear;
   set -f;

   converted_filenames=""; #notify-send variable
   converted_files_count=0; #notify-send variable

   echo "Compression Rate? (default: 31, maximum: 50)";
   read compressionRate;

   #If not a number (e.g. empty), give default 31 value
   if ! [[ $cr =~ ^[0-5][0-9]$ ]]; then
      compressionRate="31";
   fi

   for pickedFilepath in $fx; do
      #could instead use ffprobe but would get more complicated as the filetype suffix becomes unknown
      case $pickedFilepath in
         *.mp4)
		tempFilepath=$(echo "$pickedFilepath" | sed 's|.mp4|(CONVERTING).mp4|');
		mv -f "$pickedFilepath" "$tempFilepath";

		ffmpeg -i "$tempFilepath" -vcodec libx265 -crf "$compressionRate" "$pickedFilepath";
		rm -f -- "$tempFilepath";
		;;
         *.webm | *.mkv)
		newFilepath=$(echo "$pickedFilepath" | sed 's/\(.webm\|.mkv\)/.mp4/');
		ffmpeg -i "$pickedFilepath" -vcodec libx265 -crf "$compressionRate" "$newFilepath";
		rm -f -- "$pickedFilepath";
		;;
	 *)
	   continue 1;;
      esac

      ((converted_files_count=converted_files_count+1));
      converted_filenames="$converted_filenames"$'\n'"$pickedFilepath";

   done

   #Notify the user of the results
   if [[ $converted_files_count -gt 0 ]]; then
      converted_filenames=$(echo "$converted_filenames" | sed 's|.*\/||');
      notify-send "Compressed Videos($converted_files_count):" "$converted_filenames";
   fi;
}}

